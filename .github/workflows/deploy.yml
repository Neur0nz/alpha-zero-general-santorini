name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      VITE_PUBLIC_BASE_PATH: ${{ vars.PUBLIC_BASE_PATH || '/alpha-zero-general-santorini/' }}
      VITE_PYODIDE_URL: https://cdn.jsdelivr.net/pyodide/v0.24.1/full/pyodide.js
      VITE_ONNX_URL: https://cdn.jsdelivr.net/npm/onnxruntime-web@1.17.1/dist/ort.min.js
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: web

      - name: Copy Santorini model
        run: |
          mkdir -p web/public/santorini
          cp santorini/model_no_god.onnx web/public/santorini/model_no_god.onnx
          echo "Model file copied successfully"

      - name: Build static site
        run: |
          echo "Environment variables check:"
          echo "VITE_SUPABASE_URL: '$VITE_SUPABASE_URL'"
          echo "VITE_SUPABASE_ANON_KEY: '$VITE_SUPABASE_ANON_KEY'"
          echo "VITE_PUBLIC_BASE_PATH: '$VITE_PUBLIC_BASE_PATH'"
          npm run build
        working-directory: web

      - name: Verify build output
        run: |
          echo "Build completed successfully"
          ls -la dist
          echo "Checking model file in build output:"
          ls -la dist/santorini/model_no_god.onnx
          echo "Model file size: $(wc -c < dist/santorini/model_no_god.onnx) bytes"
        working-directory: web

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deploy-pages
        uses: actions/deploy-pages@v4
